station <- i
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station, "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
p
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
p
any(!is.na(data$temp_crit))
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
p
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
p
temp_assessment <- function(df, datetime_column = "sample_datetime", spawn_start = "spawn_start", spawn_end = "spawn_end",
results = "Result_cen", criteria = "temp_crit"){
sample_datetime <- as.symbol(datetime_column)
spawn_start <- as.symbol(spawn_start)
spawn_end <- as.symbol(spawn_end)
results <- as.symbol(results)
criteria <- as.symbol(criteria)
temp_analysis <- df %>%
mutate(# Add columns for Critcal period start and end date
Crit_period_start = mdy(paste0("7/1/",year(sample_datetime))),
Cirt_period_end = mdy(paste0("9/30/",year(sample_datetime))),
# Append spawn start and end dates with year
Start_spawn = ifelse(!is.na(spawn_start), paste0(spawn_start,"/",year(sample_datetime)), NA ) ,
End_spawn = ifelse(!is.na(spawn_end), paste0(spawn_end,"/",year(sample_datetime)), NA ),
# Make spwnmn start and end date date format
Start_spawn = mdy(Start_spawn),
End_spawn = mdy(End_spawn),
# If Spawn dates span a calendar year, account for year change in spawn end date
End_spawn = if_else(End_spawn < Start_spawn, End_spawn + years(1), End_spawn),
# SampleStartDate = ymd(sample_datetime),
# Flag for results in critical period
In_crit_period = ifelse(sample_datetime >=Crit_period_start & sample_datetime <= Cirt_period_end, 1, 0 ),
# Print if result is in spawn or out of spawn
Spawn_type = ifelse((sample_datetime >= Start_spawn & sample_datetime <= End_spawn & !is.na(Start_spawn)),  "Spawn", "Not_Spawn"),
# Flag if result does not attain standard,  use 13 for during spawn dates, else use criteria
excursion = ifelse(Spawn_type == "Spawn" & Result_cen > 13, 1,
ifelse(Spawn_type == "Not_Spawn" & Result_cen > criteria, 1, 0)),
# Flag for if excursion was in spawn period
Spawn_excursion = ifelse(Spawn_type == "Spawn" & excursion == 1, 1, 0 )
) %>%
arrange(sample_datetime)
# For each observation, determine the number of excursions within the last 3 years, the number of samples
# within the critical period, and the number of samples in the spawning period, all for the same station.
cat(paste("Checking within a 3 year period from sample date for the number of previous excursions",
"and the number of samples taken during spawning and critical periods...\n"))
temp_analysis <- bind_rows(
pbapply::pblapply(unique(temp_analysis$MLocID), function(x, df){
cat(paste("\nStation: ", x, "(", which(unique(df$MLocID) == x), "out of", length(unique(df$MLocID)), ")\n"))
subData <- filter(df, MLocID == x)
subData <- bind_cols(
subData,
dplyr::bind_rows(pbapply::pblapply(subData$sample_datetime,
function(x, df){
start3yr <- x - lubridate::years(3)
end3yr <- x
data <- dplyr::filter(df[,c(datetime_column, "excursion", "In_crit_period", "Spawn_type")],
dplyr::between(sample_datetime, start3yr, end3yr))
data <- dplyr::summarise(data,
n_excursions_3yr = sum(data$excursion),
samples_in_crit_period = sum(data$In_crit_period),
samples_in_spawn_period = sum(data$Spawn_type == "Spawn"))
return(data[, c("n_excursions_3yr", "samples_in_crit_period", "samples_in_spawn_period")])
},
df = subData[,c(datetime_column, "excursion", "In_crit_period", "Spawn_type")])
)
)
}, df = temp_analysis)
)
temp_analysis$excursion_cen <- ifelse(temp_analysis$excursion == 1 & temp_analysis$n_excursions_3yr >= 3, 1, 0)
temp_analysis$spawning_crit <- 13
return(temp_analysis)
}
clack_data_temp <- clack_data %>% filter(Char_Name == "Temperature, water")
clack_data_temp <- Censored_data(clack_data_temp, criteria = "temp_crit")
clack_data_temp <- temp_assessment(clack_data_temp)
temp_status <- status_stns(clack_data_temp)
temp_trend <- trend_stns(clack_data_temp)
seaKen <- sea_ken(filter(clack_data, MLocID %in% c(temp_trend$MLocID, pH_trend$MLocID)))
temp_stations <- unique(c(temp_status[temp_status$Char_Name == "Temperature, water",]$MLocID, seaKen[seaKen$Char_Name == "Temperature, water",]$MLocID))
temp_plots <- list()
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station, "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_stations <- unique(c(temp_status[temp_status$Char_Name == "Temperature, water",]$MLocID, seaKen[seaKen$Char_Name == "Temperature, water",]$MLocID))
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
View(clack_data_temp)
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station, "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_plots[1]
temp_stations[1]
i <- temp_stations[1]
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
station <- i
data <- plot_data
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station, "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
p
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
p
class(x_min)
class(x_max)
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station & seaKen$Char_Name == "Temperature, water", "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_plots[1]
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station & seaKen$Char_Name == "Temperature, water", "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'white')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_plots[1]
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station & seaKen$Char_Name == "Temperature, water", "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'red')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_plots[1]
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station & seaKen$Char_Name == "Temperature, water", "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
# if(any(data$spawning == "Spawning")){
#   spawn_start <- unique(data$spawn_start)
#   spawn_end <- unique(data$spawn_end)
#   years <- unique(lubridate::year(data$sample_datetime))
#
#   rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
#                       x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
#                       y1=-Inf, y2=Inf)
#   p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
# }
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
temp_plots[1]
plot_temperature <- function(data, seaKen, station){
if(station %in% seaKen$MLocID){
slope <- seaKen[seaKen$MLocID == station & seaKen$Char_Name == "Temperature, water", "slope"]
x_min <- min(data$sample_datetime, na.rm = TRUE)
x_max <- max(data$sample_datetime, na.rm = TRUE)
x_delta <- as.numeric((x_max-x_min)/2)
y_median <- median(data$Result_Numeric, na.rm = TRUE)
sk_min <- y_median - x_delta*slope/365.25
sk_max <- y_median + x_delta*slope/365.25
}
ymin <- min(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
ymax <- max(c(data$Result_Numeric, data$temp_crit), na.rm = TRUE)
data$excursion <- as.character(data$excursion)
p <- ggplot(data) +
geom_point(aes(x=sample_datetime, y=Result_Numeric, color = excursion, linetype = excursion, shape = excursion)) +
ggtitle(paste(station)) +
ylab("Temperature (degrees C)") +
xlab("Datetime")
if(station %in% seaKen$MLocID){
p <- p + geom_segment(aes(x=x_min, xend=x_max, y=sk_min, yend=sk_max, color = "Trend", linetype = "Trend", shape = "Trend"))
}
if(any(!is.na(data$temp_crit))){
p <- p + geom_line(aes(x=sample_datetime, y=temp_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawn")){
p <- p + geom_line(aes(x=sample_datetime, y=spawning_crit, color=Spawn_type, linetype=Spawn_type, shape=Spawn_type))
}
if(any(data$Spawn_type == "Spawning")){
spawn_start <- unique(data$spawn_start)
spawn_end <- unique(data$spawn_end)
years <- unique(lubridate::year(data$sample_datetime))
rects <- data.frame(x1=as.POSIXct(paste0(years, "-", lubridate::month(spawn_start), "-", lubridate::day(spawn_start))),
x2=as.POSIXct(paste0(years, "-", lubridate::month(spawn_end), "-", lubridate::day(spawn_end))),
y1=-Inf, y2=Inf)
p + geom_rect(data = rects, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), color = NA, alpha=.4, fill='grey')
}
p <- p +
scale_color_manual(values = c('1' = 'red', '0' = 'black', "Trend" = 'blue', "Spawn" = 'black', "Not_Spawn" = 'black')) +
scale_linetype_manual(values = c('1' = 0, '0' = 0, "Trend" = 1, "Spawn" = 2, "Not_Spawn" = 3)) +
scale_shape_manual(values = c('1' = 16, '0' = 16, "Trend" = 32, "Spawn" = 32, "Not_Spawn" = 32)) +
ylim(c(ymin, ymax))
return(p)
}
temp_plots <- list()
for(i in temp_stations){
plot_data <- clack_data_temp %>% filter(Char_Name == "Temperature, water", MLocID == i)
p <- plot_temperature(plot_data, seaKen, i)
temp_plots[[i]] <- p
}
ggplot(filter(clack_data_temp, Char_Name == "Temperature, water", MLocID %in% c(trend$MLocID))) +
geom_point(aes(x=sample_datetime, y=Result_cen, color=excursion)) +
scale_color_manual(values = c(0 = "black", 1 = "red")) +
facet_wrap(c("MLocID", "Char_Name"), scales = "free")
temp_plots[1]
getwd()
setwd("//deqhq1/WQNPS/Agriculture/Status_and_Trend_Analysis/odeq_assessment package/odeq_assessment")
getwd()
document()
library(roxygen2)
document()
devtools::document()
setwd("//deqhq1/WQNPS/Agriculture/Status_and_Trend_Analysis/odeq_assessment package")
getwd()
devtools::document()
setwd("//deqhq1/WQNPS/Agriculture/Status_and_Trend_Analysis/odeq_assessment package/odeq_assessment")
getwd()
